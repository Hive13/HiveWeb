<div class="row">
	<div class="col-sm-12 panel panel-default" style="padding: 0;">
		<div class="panel-heading">
			<h3>Members</h3>
		</div>
		<table class="data_table table hive-member-table">
			<thead></thead>
			<tbody></tbody>
		</table>
	</div>
</div>

<div class="modal fade" id="edit_dialogue" tabIndex="-1" role="dialog" aria-labelledby="edit_label">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close" title="Close"><span aria-hidden="true">&#x2620;</span></button>
				<h3 class="modal-title" id="edit_label">Edit User</h3>
			</div>
		<div class="modal-body">
			<div class="row row-eq-height">
				<div class="col-sm-6 col-lg-3">
					<div class="panel panel-default">
						<div class="panel-heading">
							<h5>Group Membership</h5>
						</div>
						<div class="panel-body">
							[%~ FOREACH group IN groups %]
							<label><input type="checkbox" class="group" value="[% group.mgroup_id %]" /> [% group.name %]</label><br />
							[%~ END %]
						</div>
					</div>
				</div>
				<div id="badges" class="col-sm-6 col-lg-2">
					<div class="panel panel-default">
						<div class="panel-heading">
							<h5>Badges</h5>
						</div>
						<div class="panel-body">
							<select size="2" multiple="multiple"></select><br />
							<img title="Add" class="add icon" src="/static/icons/add.png" />
							<img title="Delete" class="delete icon icon-disabled" src="/static/icons/delete.png" />
							<div id="badge_edit" style="display: none; max-width: 100%;">
								<input type="text" id="badge_number" style="max-width: 100%" />
							</div>
						</div>
					</div>
				</div>
				<div id="soda_credit_div" class="col-sm-12 col-lg-7">
					<div class="panel panel-info">
						<div class="panel-heading">
							<h5>Member Profile</h5>
						</div>
						<div class="panel-body">
							<label>Soda Credits:<br />
								<input type=text id="soda_credits" size="3" />
							</label>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="modal-footer">
			<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
			<button type="button" class="btn btn-primary" id="finish_edit">OK</button>
		</div>
	</div>
</div>

<div id="password_dialogue" style="display: none">
	<input type="password" id="password1" length="30" name="password1" required autofocus placeholder="Password" class="form-control" />
	<input type="password" id="password2" length="30" name="password2" required placeholder="Confirm Password" class="form-control" />
</div>

<div class="modal fade" id="filter_dialogue" tabIndex="-1" role="dialog" aria-labelledby="filter_label">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close" title="Close"><span aria-hidden="true">&#x2620;</span></button>
				<h3 class="modal-title" id="filter_label">Select Filters</h3>
			</div>
			<div class="modal-body">
				<div class="row">
					<div class="col-md-6">
						<div class="panel panel-default">
							<div class="panel-heading">
								<h4>Active or Inactive</h4>
							</div>
							<div class="panel-body">
								<label>All: <input type="radio" name="active" value="null" /></label><br />
								<label>Active: <input type="radio" name="active" value="true" /></label><br />
								<label>Inactive: <input type="radio" name="active" value="false" /></label><br />
							</div>
						</div>
					</div>
					<div class="col-md-6">
						<div class="panel panel-default">
							<div class="panel-heading">
								<h4>PayPal Status</h4>
							</div>
							<div class="panel-body">
								<label>Any: <input type="checkbox" name="paypal" value="any" /></label><br />
								<label>Yes, same as primary e-mail: <input type="checkbox" name="paypal" value="same" /></label><br />
								<label>Different PayPal e-mail: <input type="checkbox" name="paypal" value="diff" /></label><br />
								<label>Does not use PayPal: <input type="checkbox" name="paypal" value="no" /></label><br />
							</div>
						</div>
					</div>
					<div class="col-xs-12">
						<div class="panel panel-default">
							<div class="panel-heading">
								<h4>Group Membership</h4>
							</div>
							<div class="panel-body">
								<div class="row">
									<div class="col-md-6">
										<h5>Filtering Options</h5>
										<label>Don't use this filter <input type="radio" name="group_filter" value="null" /></label><br />
										<label><b>Show</b> members who are in <b>any</b> of the following groups <input type="radio" name="group_filter" value="any" /></label><br />
										<label><b>Show</b> members who are in <b>all</b> of the following groups <input type="radio" name="group_filter" value="all" /></label><br />
										<label><b>Hide</b> members who are in <b>any</b> of the following groups <input type="radio" name="group_filter" value="not_any" /></label><br />
										[%~
											# I'll figure this out eventually.
										  # <label><b>Hide</b> members who are in <b>all</b> of the following groups <input type="radio" name="group_filter" value="not_all" /></label><br />
										%]
									</div>
									<div class="col-md-6">
										<h5>Group Selection</h5>
										<div id="group_list"></div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
					<button type="button" class="btn btn-primary" id="refresh_filters">OK</button>
				</div>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
var lock_url   = "[% Catalyst.uri_for('/api/admin/members/lock').dquote %]";
var load_url   = "[% Catalyst.uri_for('/api/admin/members').dquote %]";
var order      = "lname";
var dir        = "ASC";
var all_groups = [];
var filters    =
	{
	active:     null,
	paypal:     null,
	group_type: null,
	group_list: null
	}
var columns    =
	[
		{
		name: "fname",
		desc: "First Name"
		},
		{
		name: "lname",
		desc: "Last Name"
		},
		{
		name: "email",
		desc: "E-mail Address"
		},
		{
		name: "accesses",
		desc: "Accesses",
		hidden: "xs"
		},
		{
		name: "last_access_time",
		desc: "Last Access Time",
		date: true,
		hidden: "xs"
		},
		{
		name: "created_at",
		desc: "Create Time",
		date: true,
		hidden: "sm"
		},
	];

$(function()
	{
	var $table = $("table.hive-member-table");

	$table
		.on("dblclick", "tr", function ()
			{
			edit($(this).attr("id"));
			return false;
			})
		.on("click", "td.edit img.password", function ()
			{
			var $this = $(this);
			var member_id = $this.parents("tr").attr("id");
			change_password(member_id);
			return false;
			})
		.on("click", "td.edit img.edit", function ()
			{
			var $this = $(this);
			var member_id = $this.parents("tr").attr("id");
			edit(member_id);
			return false;
			})
		.on("mouseover", "td.lock img", function()
			{
			var $this = $(this);

			if ($this.hasClass("lock"))
				$this.attr("src", "[% Catalyst.uri_for('/static/icons/lock.png').dquote %]");
			else
				$this.attr("src", "[% Catalyst.uri_for('/static/icons/unlock.png').dquote %]");

			return false;
			})
		.on("mouseout", "td.lock img", function ()
			{
			var $this = $(this);

			if ($this.hasClass("lock"))
				$this.attr("src", "[% Catalyst.uri_for('/static/icons/unlock.png').dquote %]");
			else
				$this.attr("src", "[% Catalyst.uri_for('/static/icons/lock.png').dquote %]");

			return false;
			})
		.on("click", "td.lock img", function ()
			{
			var $this, req_data = {};
			if (confirm("Are you sure?"))
				{
				$this = $(this);
				req_data.member_id = $this.parents("tr").attr("id");
				if ($this.hasClass("unlock"))
					req_data.lock = 0;
				else
					req_data.lock = 1;
				api_json(lock_url, req_data, "Lock/unlock", function (data)
					{
					if ($this.hasClass("unlock"))
						{
						$this
							.removeClass("unlock")
							.addClass("lock")
							.attr("title", "Lock")
							.attr("src", "[% Catalyst.uri_for('/static/icons/unlock.png').dquote %]");
						$this.parents("tr").removeClass("locked");
						}
					else
						{
						$this
							.removeClass("lock")
							.addClass("unlock")
							.attr("title", "Unlock")
							.attr("src", "[% Catalyst.uri_for('/static/icons/lock.png').dquote %]");
						$this.parents("tr").addClass("locked");
						}
					});
				}

			return false;
			})
		;

	load_members();
	});

$("div#filter_dialogue input[name=paypal]").click(function ()
	{
	var $this = $(this);

	if ($this.val() === "any")
		$("div#filter_dialogue input[name=paypal][value!=any]").prop("checked", false);
	else
		$("div#filter_dialogue input[name=paypal][value=any]").prop("checked", false);
	});

function sort_click()
	{
	var $this     = $(this);
	var new_dir   = $this.hasClass("sort-asc") ? "ASC" : "DESC";
	var new_order = $this.attr("id").substring(5);

	order = new_order;
	dir   = new_dir;
	load_members();
	}

function hidden_styles(which)
	{
	var styles = "", j, sz = ["xs", "sm", "md", "lg"], disp = 0;

	for (j = sz.length - 1; j >= 0; j--)
		if (disp || which === sz[j])
			{
			if (disp)
				styles += " ";
			disp = 1;
			styles += "hidden-" + sz[j];
			}

	return styles;
	}

function load_header($table)
	{
	var html, $thead = $table.find("thead"), i, j, sz = ["xs", "sm", "md", "lg"], disp;

	html = "<tr><th></th>";

	html += "<th>"
		+ "<img class=\"filter icon\" src=\"[% Catalyst.uri_for('/static/icons/filter.png').dquote %]\" title=\"Filter Results\" data-toggle=\"modal\" data-target=\"#filter_dialogue\" />"
		+ "</th>";

	for (i = 0; i < columns.length; i++)
		{
		html += "<th";
		if ("hidden" in columns[i])
			html += " class=\"" + hidden_styles(columns[i].hidden) + "\"";
		html += "><a id=\"sort-" + columns[i].name + "\" class=\"anchor-style sort sort-";
		html += (order === columns[i].name && dir === "ASC") ? "desc" : "asc";
		html += "\">" + columns[i].desc;
		if (order === columns[i].name)
			html += ((dir === "ASC") ? "(&darr;)" : "(&uarr;)");
		html += "</a></th>";
		}
	$thead.html(html);
	$thead.find("a.sort").click(sort_click);
	}

function load_members()
	{
	var html = "", $table = $("table.hive-member-table");
	var $tbody = $table.find("tbody");
	var params =
		{
		order:   order,
		dir:     dir,
		filters: filters
		};

	load_header($table);

	$tbody.html("<tr class=\"loading\"><td colspan=\"8\">" + loading_icon() + "</td></tr>");
	api_json(load_url, params, "Member load", function (data)
		{
		var i, j, date_obj, member, val;

		all_groups = data.groups;

		for (i = 0; i < data.members.length; i++)
			{
			member = data.members[i];
			create = new Date(member.create_time);
			access = new Date(member.last_access_time);

			html += "<tr id=\""
				+ member.member_id + "\""
				+ (member.locked_out ? " class=\"locked\"" : "")
				+ ">";

			html += "<td class=\"edit\">"
				+ "<img src=\"[% Catalyst.uri_for('/static/icons/key.png').dquote %]\" title=\"Change Password\" class=\"password icon\" />"
				+ "<img src=\"[% Catalyst.uri_for('/static/icons/edit.png').dquote %]\" title=\"Edit\" class=\"edit icon\" />"
				+ "<img src=\"[% Catalyst.uri_for('/static/icons/delete.png').dquote %]\" title=\"Delete\" class=\"delete icon\" />"
				+ "</td>";
			html += "<td class=\"lock\">";
			if (member.locked_out)
				html += "<img title=\"Unlock\" class=\"unlock icon\" src=\"[% Catalyst.uri_for('/static/icons/lock.png').dquote %]\" />";
			else
				html += "<img title=\"Lock\" class=\"lock icon\" src=\"[% Catalyst.uri_for('/static/icons/unlock.png').dquote %]\" />";
			html += "</td>";

			for (j = 0; j < columns.length; j++)
				{
				val = member[columns[j].name];
				html += "<td";
				if ("hidden" in columns[j])
					html += " class=\"" + hidden_styles(columns[j].hidden) + "\"";
				html += ">";

				if ("date" in columns[j] && columns[j].date)
					{
					if (val)
						{
						date_obj = new Date(val);
						html += date_obj.toLocaleDateString() + " " + date_obj.toLocaleTimeString();
						}
					else
						html += "--";
					}
				else
					html += member[columns[j].name];

				html += "</td>";
				}

			html += "</tr>";
			}
		$tbody.html(html);
		});
	}

function badge_edit(badge_id)
	{
	var $div      = $("#badge_edit");
	var $edit     = $div.find("input");
	var member_id = $("#edit_dialogue").data("member_id");
	var url       = "[% Catalyst.uri_for('/api/admin/members/add_badge') %]";
	
	$edit.val("");
	$div.css("display", "");
	$edit.focus();

	$edit.keydown(function (e)
		{
		var data;
		if (e.keyCode == 27)
			{
			$div.css("display", "none");
			$div.parent().focus();
			return false;
			}
		else if (e.keyCode == 13)
			{
			data =
				{
				badge_number: $("#badge_number").val(),
				member_id:    member_id
				};
			if (badge_id === undefined)
				{
				api_json(url, data, "Badge add", function (data)
					{
					var $option = $("<option />")
						.attr("id", data.badge_id)
						.attr("value", data.badge_number)
						.text(data.badge_number);
					$("#edit_dialogue div#badges select").append($option);
					$.toast(
						{
						heading: "Success",
						text: "Badge added!",
						icon: "success",
						position: "top-right"
						});
					});
				}
			$div.css("display", "none");
			$div.parent().focus();
			return false;
			}
		});
	}

function save_password()
	{
	var $this = $(this), member_id = $this.data("member_id");
	var password  = $this.find("input#password1").val();
	var password2 = $this.find("input#password2").val();
	var url = "[% Catalyst.uri_for('/api/admin/members/password') %]";
	var data =
		{
		member_id: member_id,
		password:  password
		};

	if (password != password2)
		{
		$.toast(
			{
			heading: "Passwords aren't the same",
			text: "Please make sure they match.  Please.",
			icon: "error",
			position: "top-right"
			});
		return;
		}

	api_json(url, data, "Password update", function (data)
		{
		$.toast(
			{
			heading: "Password update succeeded",
			text: data.data,
			icon: "success",
			position: "top-right"
			});
		$this.dialog("close");
		});
	}

function save_member()
	{
	var $this = $(this), groups = [], member_id = $this.data("member_id");
	var soda_credits = $this.find("input#soda_credits").val();
	var url, what, data =
		{
		groups: groups,
		vend_credits: soda_credits
		};

	if (member_id)
		{
		what = "Member edit";
		url = "[% Catalyst.uri_for('/api/admin/members/edit') %]";
		data.member_id = member_id;
		}
	else
		{
		what = "Member add";
		url = "[% Catalyst.uri_for('/api/admin/members/new') %]";
		}

	$("input.group[type=\"checkbox\"]:checked").each(function()
		{
		groups.push($(this).val());
		});

	api_json(url, data, what, function (data)
		{
		$.toast(
			{
			heading: what + " succeeded",
			text: data.data,
			icon: "success",
			position: "top-right"
			});
		$this.dialog("close");
		});
	}

function change_password(member_id)
	{
	var title = "Change Member Password";
	var $dialogue = $("#password_dialogue");
	$dialogue.data("member_id", member_id);

	$dialogue.dialog(
		{
		title: title,
		buttons:
			{
			Cancel: function() { $(this).dialog("close"); },
			OK: save_password
			}
		});
	}

function edit(member_id)
	{
	var i, html = "";
	var title = member_id ? "Edit Member" : "Add Member";
	var $dialogue = $("#edit_dialogue");
	$dialogue.data("member_id", member_id);

	for (i = 0; i < all_groups.length; i++)
		html += "<label><input type=\"checkbox\" class=\"group\" value=\""
			+ all_groups[i].mgroup_id + "\" /> " + all_groups[i].name
			+ "</label><br />";
	$dialogue.find("div#groups").html(html);

	$.ajax(
		{
		dataType: "json",
		url: "[% Catalyst.uri_for('/api/admin/members/info') %]" + "/" + member_id,
		cache: false,
		success: function (data)
			{
			var i, badge, $option, $select, $soda_credits;

			$("input.group[type=\"checkbox\"]").prop("checked", false);
			$select       = $dialogue.find("div#badges select").empty();
			$soda_credits = $dialogue.find("input#soda_credits");

			$soda_credits.val(data.member.vend_credits);

			for (i = 0; i < data.groups.length; i++)
				$("input.group[type=\"checkbox\"][value=\"" + data.groups[i].mgroup_id + "\"]").prop("checked", true);

			for (i = 0; i < data.badges.length; i++)
				{
				badge = data.badges[i];
				$option = $("<option />")
					.attr("id", badge.badge_id)
					.attr("value", badge.badge_number)
					.text(badge.badge_number);
				$select.append($option);
				}

			$select.change(function ()
				{
				var $this = $(this);

				if ($this.find("option:selected").length > 0)
					$dialogue.find("img.delete").removeClass("icon-disabled");
				else
					$dialogue.find("img.delete").addClass("icon-disabled");
				});

			$dialogue.find("div#badges img.add").click(function () { badge_edit(undefined) });
			$dialogue.find("div#badges img.delete").click(function()
				{
				var badges = [];
				var url = "[% Catalyst.uri_for('/api/admin/members/delete_badge') %]";
				var data =
					{
					member_id: member_id,
					badge_id:  badges
					};

				$("div#badges select option:selected").each(function ()
					{
					badges.push($(this).attr("id"));
					});
				if (badges.length <= 0)
					return;
				if (!confirm("Are you sure you want to delete " + badges.length + " badges?"))
					return;
				api_json(url, data, "Badge delete", function (data)
					{
					var i;

					for (i = 0; i < badges.length; i++)
						$("div#badges select option#" + badges[i]).remove();
					$.toast(
						{
						heading: "Success",
						text: "Badge(s) deleted!",
						icon: "success",
						position: "top-right"
						});
					});
				});
			$dialogue.find("#edit_label").text(title);
			$dialogue.modal("show");
			$dialogue.find("button#finish_edit").click(save_member);
			}
		});
	}

var $filter = $("div#filter_dialogue");

$filter.on("show.bs.modal", function ()
	{
	var i, html = "";

	for (i = 0; i < all_groups.length; i++)
		html += "<label>" + all_groups[i].name
			+ " <input type=\"checkbox\" name=\"group_list\" value=\""
			+ all_groups[i].mgroup_id + "\" /></label><br />";
	$filter.find("div#group_list").html(html);

	if (filters.group_type === null)
		$filter.find("input[name=group_filter][value=null]").prop("checked", true);
	else
		$filter.find("input[name=group_filter][value=" + filters.group_type + "]").prop("checked", true);
	if (filters.group_list)
		for (i = 0; i < filters.group_list.length; i++)
			$filter.find("input[name=group_list][value=" + filters.group_list[i] + "]").prop("checked", true);

	if (filters.active === true)
		$filter.find("input[name=active][value=true]").prop("checked", true);
	else if (filters.active === false)
		$filter.find("input[name=active][value=false]").prop("checked", true);
	else
		$filter.find("input[name=active][value=null]").prop("checked", true);
	if (filters.paypal === null)
		{
		$filter.find("input[name=paypal][value!=any]").prop("checked", false);
		$filter.find("input[name=paypal][value=any]").prop("checked", true);
		}
	else
		{
		$filter.find("input[name=paypal][value=any]").prop("checked", false);
		for (i = 0; i < filters.paypal.length; i++)
			$filter.find("input[name=paypal][value=" + filters.paypal[i] + "]").prop("checked", true);
		}
	});

$filter.find("button#refresh_filters").click(function ()
	{
	var active, group_type, paypal = [], group_list = [];

	$filter.modal("hide");
	active     = $filter.find("input[name=active]:checked").val();
	group_type = $filter.find("input[name=group_filter]:checked").val();
	$filter.find("input[name=paypal]:checked").each(function ()
		{
		var v = $(this).attr("value");

		if (v === "any")
			{
			paypal = null;
			return false;
			}
		paypal.push(v);
		});

	if (group_type === "null")
		filters.group_type = null;
	else
		filters.group_type = group_type;
	$filter.find("input[name=group_list]:checked").each(function () { group_list.push($(this).attr("value")); });
	if (!group_list.length)
		filters.group_list = null;
	else
		filters.group_list = group_list;

	if (active === "true")
		filters.active = true;
	else if (active === "false")
		filters.active = false;
	else
		filters.active = null;
	if (!paypal || !paypal.length)
		paypal = null;
	filters.paypal = paypal;
	load_members();
	});
</script>
[%~ # vim:set filetype=tt2html: ~%]
